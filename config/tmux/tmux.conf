# -----------------------------
# TERMINAL SETTINGS
# -----------------------------

# Set default terminal dynamically
if-shell "infocmp tmux-256color >/dev/null 2>&1" \
    "set -g default-terminal 'tmux-256color'" \
    "set -g default-terminal 'screen-256color'"

# Enable basic terminal features - FIX: Split into separate commands
set -sa terminal-features ',*:RGB'
set -sa terminal-features ',*:hyperlinks'
set -sa terminal-features ',*:styled-underlines'
set -sa terminal-features ',*:extending'

# Enable passthrough mode (for compatibility with modern terminals)
set -g allow-passthrough on
set -ga update-environment "TERM"
set -ga update-environment "TERM_PROGRAM"

# Ensure True Color support across all terminals
set -ga terminal-overrides ',*:Tc'

# Kitty (uses its own graphics protocol via passthrough)
set -ga terminal-overrides ',xterm-kitty:Tc'
set -ga terminal-overrides ',xterm-kitty:RGB'
set -ga terminal-overrides ',xterm-kitty:Smulx=\E[4::%p1%dm'
set -ga terminal-overrides ',xterm-kitty:Ms=\E]52;%p1%s;%p2%s\007'
set -ga terminal-features ',xterm-kitty:clipboard'

# WezTerm (supports sixel)
set -ga terminal-overrides ',wezterm:Tc'
set -ga terminal-overrides ',wezterm:RGB'
set -ga terminal-features ',wezterm:clipboard'
set -ga terminal-features ',wezterm:sixel'

# tmux (sixel support for nested tmux sessions)
set -ga terminal-overrides ',tmux-256color:Tc'
set -ga terminal-overrides ',tmux-256color:sixel'
set -ga terminal-features ',tmux-256color:sixel'


# -----------------------------
# GENERAL SETTINGS
# -----------------------------

# Index windows and panes from 1
set -g base-index 1
set -g pane-base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Terminal timings
set -g escape-time 10               # Remove escape delay
set -g display-time 1500           # Messages display duration
set -g repeat-time 500            # Time allowed to repeat commands

# Activity monitoring
set -g monitor-activity on        # Highlight windows with activity
set -g visual-activity off        # Don't show activity messages
set -g visual-bell off           # Disable visual bell
set -g visual-silence off        # Disable visual silence
set -g bell-action none          # Disable bell

# Mouse support
set -g mouse on                  # Enable mouse support

# Focus events
set -g focus-events on           # Forward focus events to applications

# History limit
set -g history-limit 50000       # Increase scrollback buffer size

# Detach on destroy off
set -g detach-on-destroy off     # Don't detach on destroy

# Set status interval 1
set -g status-interval 1

# Set clipboard
set -g set-clipboard on
set -g set-clipboard external


# -----------------------------
# KEY BINDINGS
# -----------------------------

# Set prefix to Ctrl-a
set -g prefix C-space
unbind C-b
bind C-space send-prefix

# Reload tmux config
bind r source-file ${XDG_CONFIG_HOME}/tmux/tmux.conf \; display-message "Config reloaded..."

# Smart pane navigation for vim-tmux-navigator
# These bindings are handled by the plugin
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Splitting panes
unbind '"'
unbind %
bind | split-window -h -c "#{pane_current_path}"    # Horizontal split
bind - split-window -v -c "#{pane_current_path}"    # Vertical split
bind "%" split-window -h -p 40 -c "#{pane_current_path}"  # 40% horizontal split
bind '"' split-window -v -p 40 -c "#{pane_current_path}"    # 40% vertical split

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Reset pane sizes
bind = select-layout even-horizontal
bind + select-layout even-vertical

# Window navigation
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5

# Quick window switching
bind -n M-p previous-window
bind -n M-n next-window
bind Space last-window
bind ^W list-windows
bind M-w choose-window

# Window operations
bind c new-window -c "#{pane_current_path}"
bind X confirm-before -p "Kill window #W? (y/n)" kill-window
bind S command-prompt -p "Swap window with:" "swap-window -t '%%'"
bind m command-prompt -p "Move window to:" "move-window -t '%%'"
bind R command-prompt -p "Rename window to:" "rename-window '%%'"

# -----------------------------
# SESSION MANAGEMENT
# -----------------------------

# Session operations
bind C-c new-session
bind C-f command-prompt -p "Find session:" "switch-client -t '%%'"
bind C-k confirm-before -p "Kill session #S? (y/n)" kill-session

# Session navigation
bind -n M-[ switch-client -p
bind -n M-] switch-client -n

# -----------------------------
# COPY MODE
# -----------------------------

# Vi mode
setw -g mode-keys vi

# Copy mode bindings
bind v copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
bind -T copy-mode-vi C-h send -X previous-word
bind -T copy-mode-vi C-l send -X next-word-end
bind -T copy-mode-vi / command-prompt -p "Search down:" "send -X search-forward \"%%%\""
bind -T copy-mode-vi ? command-prompt -p "Search up:" "send -X search-backward \"%%%\""


# Vim-tmux-navigator copy mode bindings
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# -----------------------------
# UTILITY BINDINGS
# -----------------------------

# Toggle synchronized panes
bind C-s set-window-option synchronize-panes

# Toggle status bar
bind C-b set status

# Quick layouts
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# Break and join panes
bind g break-pane -d                                                              # Break pane to new window
bind G command-prompt -p "Break pane to session:" "break-pane -s '%%'"           # Break pane to new session
bind h command-prompt -p "Join pane from (horizontal):" "join-pane -h -s '%%'"  # Join pane horizontally
bind v command-prompt -p "Join pane from (vertical):" "join-pane -v -s '%%'"    # Join pane vertically


# Toggle pane features
bind M-z resize-pane -Z  # Toggle zoom with Alt-z
bind M-m set-window-option monitor-activity  # Toggle activity monitoring

# -----------------------------
# TPM - Tmux Plugin Manager
# -----------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'xamut/tmux-weather'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Additional plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'      # Persists tmux environment across system restarts
set -g @plugin 'tmux-plugins/tmux-continuum'      # Continuous saving of tmux environment
# set -g @plugin 'omerxx/tmux-floax'                # Floating windows and sticky notes
set -g @plugin 'fcsonline/tmux-thumbs'            # Highlight, select, copy anything
set -g @plugin 'tmux-plugins/tmux-yank'           # Copy to system clipboard
set -g @plugin 'sainnhe/tmux-fzf'                 # Fuzzy finder integration
set -g @plugin 'wfxr/tmux-fzf-url'                # URL fuzzy finder


#-----------------------------
# Plugin Configurations
#-----------------------------

# Tmux Resurrect
set -g @resurrect-strategy-nvim 'session'         # Restore Neovim session if Session.vim exists
set -g @resurrect-capture-pane-contents 'on'      # Restore pane contents

# Tmux Continuum
set -g @continuum-restore 'on'                    # Restore tmux environment on start

# Tmux Floax
# set -g @floax-border-color '#f38ba8'              # Border color for floating windows

# Thumbs configuration
set -g @thumbs-command 'echo -n {} | wl-copy'      # Copy to clipboard using wl-copy (Wayland)
set -g @thumbs-key T                               # Change activation key to T
set -g @thumbs-upcase-command 'open "{}"'         # Open URL
set -g @thumbs-regexp-1 '[a-z]+@[a-z]+.[a-z]+' # Email pattern
set -g @thumbs-regexp-2 '[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}:[a-f0-9]{2}' # MAC addresses
set -g @thumbs-regexp-3 '\w+' # Words
set -g @thumbs-regexp-4 '[0-9]+' # Numbers

# Yank configuration
set -g @yank_selection 'clipboard'                # Copy to system clipboard
set -g @yank_selection_mouse 'clipboard'          # Copy mouse selection to clipboard


# TPM Bootstrap
if "test ! -d $XDG_CONFIG_HOME/tmux/plugins/tpm" \
    "run 'mkdir -p $XDG_CONFIG_HOME/tmux/plugins && git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm && \
    tmux display-message \"Installing TPM and plugins...\" && \
    $XDG_CONFIG_HOME/tmux/plugins/tpm/bin/install_plugins && \
    tmux display-message \"TPM and plugins installation complete!\"'"


# -----------------------------
# STATUS BAR
# -----------------------------

# Set status settings
set -g status-position top
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_status_background "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"
set -g @catppuccin_window_status_style "none"
set -g status-justify "absolute-centre"

# custom var
set -g @custom_separator "#{?#{e|>:#{window_width},80}, #{#[fg=#{@thm_overlay_0},bg=#{@thm_bg}]|},}"
set -g @custom_uptime "#(uptime | sed 's/^[^,]*up *//; s/, *[[:digit:]]* user.*//; s/ day.*, */d /; s/ hr\\(s*\\).*/h/; s/ min\\(s*\\).*/m/; s/ sec\\(s*\\).*/s/; s/\\([0-9]\\{1,2\\}\\):\\([0-9]\\{1,2\\}\\)/\\1h \\2m/;')"
# set -g @custom_gitmux '#(gitmux -cfg $XDG_CONFIG_HOME/gitmux/gitmux.conf "#{pane_current_path}")'
# set -g @custom_gitmux '#(if [ -n "$(ls -A #{pane_current_path})" ]; then if git -C #{pane_current_path} rev-parse --is-inside-work-tree >/dev/null 2>&1; then gitmux -cfg $XDG_CONFIG_HOME/gitmux/gitmux.conf "#{pane_current_path}"; else echo "not a repo"; fi; else echo "empty"; fi)'

set -g @custom_gitmux '#(if [ -n "$(ls -A #{pane_current_path})" ]; then if git -C #{pane_current_path} rev-parse --is-inside-work-tree >/dev/null 2>&1; then gitmux -cfg $XDG_CONFIG_HOME/gitmux/gitmux.conf "#{pane_current_path}"; else date "+%Y-%m-%d"; fi; else date "+%Y-%m-%d"; fi)'


# Status Left
set -g status-left-length 100
set -g status-left ""

# Session, window and pane information
set -ga status-left "#[fg=#{@thm_green},bg=default]"
set -ga status-left "#{?client_prefix,#[#{fg=#{@thm_green}}]#[reverse]#[bold],}"
set -ga status-left "  #S:#I.#P "
set -ga status-left "#{?client_prefix,#[none],}"
set -ga status-left "#{E:#{@custom_separator}}"

# Application information
set -ga status-left "#[fg=#{@thm_maroon},bg=default]"
set -ga status-left "#{?#{e|>:#{window_width},80},  #{pane_current_command},} "
set -ga status-left "#{E:#{@custom_separator}}"

# Directory information
set -ga status-left "#[fg=#{@thm_blue},bg=default]"
set -ga status-left "#{?#{e|>:#{window_width},80},  #{=/24/...:#{b:pane_current_path}},} "

# Window status
set -wg automatic-rename on
set -g automatic-rename-format "#{pane_current_command}"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[fg=#{@thm_overlay_0},bg=#{@thm_bg}]|"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"

# Status Right
set -g status-right-length 100
set -g status-right ""

# Uptime information
set -ga status-right "#[fg=#{@thm_teal},bg=default]"
set -ga status-right "#{?#{e|>:#{window_width},80}, 󰔟 #{E:#{@custom_uptime}} ,}"
set -ga status-right "#{E:#{@custom_separator}}"

# Weather information
set -ga status-right "#[fg=#{@thm_yellow},bg=default]"
set-option -g @tmux-weather-location "Kolkata"
set -ga status-right "#{?#{e|>:#{window_width},80}, 󰼰 #{weather},}"
set -ga status-right "#{E:#{@custom_separator}}"

# Git information
set -ga status-right "#[fg=#{@thm_flamingo},bg=default]"
set -ga status-right " 󰋽 #{E:#{@custom_gitmux}}"

# Status bottom border
set -g status 2
set -g status-style "bg=#{@thm_mantle}"
set -gF status-format[1] "#[fg=#{@thm_surface_2},bg=#{@thm_bg}]\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
"


# pane border look and feel
set -g pane-border-status off
set -g pane-border-format ""
set -g pane-active-border-style "bg=default,fg=#{@thm_peach}"
set -g pane-border-style "bg=default,fg=#{@thm_overlay_1}"
set -g pane-border-lines single

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
